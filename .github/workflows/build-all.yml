name: Cross-Platform Build

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  Cross-Platform-Build:
    runs-on: ${{ matrix.os }}
    name: "Cross-Platform Build"
    
    strategy:
      matrix:
        os: [ubuntu-22.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-22.04
            name: Linux
          - os: windows-latest
            name: Windows
          - os: macos-latest
            name: macOS
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Install dependencies (Linux)
      if: matrix.os == 'ubuntu-22.04'
      run: |
        sudo apt-get update
        sudo apt-get install build-essential \
        libsndfile1-dev libassimp-dev libasound2-dev libxrandr-dev \
        libopengl-dev libxinerama-dev libxcursor-dev libxi-dev \
        libgl1-mesa-dev libglu1-mesa-dev libxmu-dev libxi-dev

    - name: Initialize repository
      run: |
        ./init.sh
      shell: bash

    - name: Build examples
      run: |
        # Build each C++ file in src directory
        for cpp_file in src/*.cpp; do
          if [ -f "$cpp_file" ]; then
            echo "Building $cpp_file..."
            ./run.sh -n "$cpp_file"
            if [ $? -ne 0 ]; then
              echo "Failed to build $cpp_file"
              exit 1
            fi
          fi
        done
      shell: bash

    - name: Build summary
      run: |
        echo "=== Build Summary ==="
        cpp_count=$(find src -maxdepth 1 -name '*.cpp' | wc -l)
        if [ -d "src/bin" ]; then
          # Count executables differently based on OS
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            exe_count=$(find src/bin -name '*.exe' -type f | wc -l)
          else
            # On Linux/macOS, count files without extensions (executable files)
            exe_count=$(find src/bin -type f ! -name '*.*' | wc -l)
          fi
          
          echo "Found ${cpp_count} C++ source files in src/"
          echo "Found ${exe_count} executable files in src/bin/"
          if [ $exe_count -eq $cpp_count ]; then
            echo "📊 ${exe_count}/${cpp_count} examples compiled successfully"
          else
            echo "📉 ${exe_count}/${cpp_count} examples compiled successfully"
            echo "❌ ERROR: Not all examples compiled successfully!"
            exit 1
          fi
          echo ""
          echo "Built executables:"
          ls src/bin 2>/dev/null || echo "No executables found"
        else
          echo "Found ${cpp_count} C++ source files in src/"
          echo "src/bin directory not found"
          echo "📉 0/${cpp_count} examples compiled successfully"
          echo "❌ ERROR: No binaries were built!"
          exit 1
        fi
        echo ""
        echo "Source files processed:"
        ls src/*.cpp 2>/dev/null || echo "No .cpp files found"
      shell: bash
